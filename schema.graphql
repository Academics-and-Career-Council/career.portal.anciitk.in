type User {
  id: ID!
  rollno: Int!
  cpi: Float!
  branch: String!
  applications: [Application!]!
}

type Job {
  id: ID!
  name: String!
  stipend: String!
  jd: String!
  nature_of_business: String!
  designation: String!
  location: String!
  description: String!
  eligibilty: String!
  shortlist: String!
  test: String!
  status: String!
}

type Application {
  id: ID!
  student: User!
  job: Job!
  status: String!
}

input ApplicationData {
  studentId: String!
  resume: String!
  jobId: String!
}

type Notification {
  id: ID!
  heading: String!
  data: String!
}

type Query {
  getJobs: [Job!]!
  getNotifications: [Notification!]!
  getApplications(rollno: Int!): [Application!]!
  getStatus: [Application!]!
}

type Response {
  ok: Boolean!
  message: String!
}

type Mutation {
  applyJob(data: ApplicationData!): Job!
  withdrawJob(data: ApplicationData!): Job!
}